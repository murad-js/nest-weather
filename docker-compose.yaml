services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: weather-subscription-app
    ports:
      - '${PORT}:3001'
    env_file:
      - .env
    networks:
      - weather-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  postgres:
    image: postgres:17.5
    container_name: weather-subscription-postgres
    ports:
      - '${DATABASE_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test:
        ['CMD-SHELL', 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}']
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - weather-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: weather-subscription-postgres-data

networks:
  weather-network:
    name: weather-subscription-network
    driver: bridge
